---
  - name: "The remote environment"
    shell: env

  - name: "upgrade packages"
    become: yes
    apt:
      upgrade: true

  - name: install dependencies, such as NodeJS and NPM
    become: yes
    apt:
      name: ["nodejs", "npm"]
      state: latest
      update_cache: true

  - name: "install pm2"
    become: yes
    npm:
      name: pm2
      global: yes
      production: yes
      state: present

  - name: "copy zipped archive"
    become: yes
    synchronize:
      src: ../../artifact.tar.gz
      dest: ~/artifact.tar.gz
      recursive: true

  # - name: Creates directory
  #   become: yes
  #   file:
  #     path: home/ubuntu/backend_app
  #     state: directory

  - name: "Extract artifact to EC2"
    unarchive:
      src: ~/artifact.tar.gz
      dest: ~/

  - name: "start server"
    shell: |
        npm install
        pm2 stop default
        pm2 start npm -- start
    environment:
     ENVIRONMENT: production
     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
     TYPEORM_MIGRATIONS_DIR: "./migrations"
     TYPEORM_MIGRATIONS: "./migrations/*.js"
     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

  # - name: "extract artifact into backend_app"
  #   become: yes
  #   shell: |
  #       cp artifact.tar.gz backend_app
  #       cd backend_app
  #       tar xzvf artifact.tar.gz

  
 
    

# - name: "show remote environment"
#     shell: env

#   - name: "copy backend binaries"
#     become: yes
#     synchronize:
#       src: ../../backend/dist
#       dest: /home/ubuntu/uda_app
#       recursive: true

#   - name: "copy node_modules"
#     become: yes
#     synchronize:
#       src: ../../backend/node_modules
#       dest: /home/ubuntu/uda_app
#       recursive: true

#   - name: "delete anything that might already be running"
#     become: true
#     command: pm2 delete all
#     ignore_errors: true

#   - name: "start server"
#     become: true
#     shell: |
#         cd ~/uda_app/dist
#         npm install
#         pm2 stop default
#         sudo pm2 start -f ./main.js